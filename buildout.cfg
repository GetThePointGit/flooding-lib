[buildout]
index = http://packages.lizardsystem.nl
prefer-final = true
extends =
    http://packages.lizardsystem.nl/kgs/latest.cfg
extensions =
    mr.developer
parts =
    sysegg
    django
    omelette
    console_scripts
    pyflakes
    pylint
develop = .
eggs =
     flooding-lib

[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = syseggrecipe
force-sysegg = true
eggs =
    numpy
    GDAL
    matplotlib


[versions]
flooding-lib =
Django = 1.6.5
Markdown = 2.2.0
django-compressor = 1.4
django-debug-toolbar = 0.9.4
django-extensions = 1.3.8
django-nose = 1.2
djangorecipe = 1.10
factory-boy =
flooding-base = 1.35
itsdangerous =
lizard-raster = 0.3
lizard-worker = 0.10
mock = 0.8.0
nens = 1.11
netCDF4 = 1.0.4
pb.recipes.pydev = 0.4.5
pika = 0.9.8
sitesetup = 0.1
zc.buildout = 2.0.1

[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
wsgi = true
wsgilog = ${buildout:directory}/var/log/django.log
project = flooding_lib
projectegg = flooding_lib
settings = testsettings
test = flooding_lib
eggs = flooding-lib


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    coverage
    eazysvn
    pep8
    zest.releaser


[pyflakes]
# Hairy way to install pyflakes: old-style distutils script.
recipe = zc.recipe.egg
scripts =
   pyflakes
eggs =
   pyflakes
entry-points = pyflakes=pkg_resources:run_script
arguments = 'pyflakes', 'pyflakes'

[pylint]
recipe = zc.recipe.egg
eggs =
     ${buildout:eggs}
     pylint
entry-points = pylint=pylint.lint:Run
arguments = sys.argv[1:]

[sources]
flooding-base = git git@github.com:lizardsystem/flooding-base.git
lizard-worker = git git@github.com:lizardsystem/lizard-worker.git
gislib = git git@github.com:nens/gislib.git
